plugins {
    id 'java'
}

group 'me.mprieto'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    versions = [
            antlr4    : '4.11.1',
            commonsCli: '1.4',
            lombok    : '1.18.24',
            jackson   : '2.14.1',
            conductor : '3.13.2',
            junit     : '5.8.1'
    ]
}

dependencies {
    //TODO logging dependencies + configuration
    //FIXME we only need the antrl4-runtime but while developing the BatonTestRig class is very useful.
    implementation "org.antlr:antlr4:${versions.antlr4}"
    implementation "commons-cli:commons-cli:${versions.commonsCli}"
    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
    implementation "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
    implementation "com.netflix.conductor:conductor-common:${versions.conductor}"

    testCompileOnly "org.projectlombok:lombok:${versions.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/main/gen'
        }
    }
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'me.mprieto.baton.Main'
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    baseName 'baton'
}
